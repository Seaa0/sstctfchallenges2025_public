from Crypto.Util.number import getPrime, bytes_to_long
from random import randint
from math import gcd

flag = b'flag: sstctf{REDACTED}'

keys = [getPrime(randint(10,64)) for _ in range(30)]
assert not any([keys.count(itm) > 1 for itm in keys])

key = 1

for itm in keys:
    key *= itm
del keys

assert gcd(key,bytes_to_long(flag)) == 1

ct = key*(bytes_to_long(flag))**2 # I squared the flag, for extra security!
print(ct)

# 21620386644249171511647843928405875877630468616922645043995290166075591244818914811009016748641892295133899320346983775871391710114529732134959519267542420975476356983693498518505305376633042259062567385935975210667183315712350127774932057640816291513586981730604799468402444215671105729081855019002712164147150764582905688272280322785279902918214946389681805919689233289886572757637181284311788289685127926923533233740412378283318333626885752673197263250568762905333333580234113270255552987667442499219872656029017230613085045837144815054539360776238695228400765955134190712412175631195738546711436505076140925
