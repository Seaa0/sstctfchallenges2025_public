from Crypto.Util.number import bytes_to_long, isPrime
from random import randint

flag = b'sstctf{REDACTED}'

def getPrime(bit_length): # why didn't I just import getPrime?
    assert bit_length > 0
    while True:
        prime = randint(2,2**bit_length)
        if isPrime(prime):
            return prime

x = 0
y = 0

x = getPrime(512)
y = getPrime(512)

m = x+y

ct = bytes_to_long(flag)+x*y

print('m =',m)
print('ct =',ct)

# m = 9389126300020757316536938478800860406932657201529046064796126411797055465526901406203842337363424927561075735705899824921151503487181353209289339302755815
# ct = 462841843352205426120504511743740962978292844405931385925668286602001636181376530534173733308946651936816020356167692336775436854404916485081600564770113708295656881560150837823474017996492033620443788971473836175144209059321841342433087894457551259957761801437963873022536745462023466881096627636950466769268912161170423589756297706797336685146889757767